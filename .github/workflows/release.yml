name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-publish:
    name: Build & Publish to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # required for OIDC / Trusted Publishing
      contents: read

    environment:
      name: pypi
      url: https://pypi.org/project/spax/

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Verify tag matches project version
        run: |
          python - <<'PY'
          import tomllib, pathlib, os, sys
          tag = os.environ["GITHUB_REF_NAME"]
          if not tag.startswith("v"):
              sys.exit(f"Tag must start with 'v', got {tag}")
          expected = tag[1:]
          data = tomllib.loads(pathlib.Path("pyproject.toml").read_text())
          proj_ver = data["project"]["version"]
          if proj_ver != expected:
              sys.exit(f"Version mismatch: pyproject {proj_ver} vs tag {expected}")
          print(f"Version OK: {proj_ver}")
          PY

      - name: Build dists
        run: |
          python -m pip install -U pip build twine
          python -m build
          twine check dist/*

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@v1.10.1
        with:
          verbose: true
          print-hash: true

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spax-${{ github.ref_name }}-dist
          path: dist/*
